diff --git a/core/array_constraints.cpp b/core/array_constraints.cpp
index 54e942d..91d930b 100644
--- a/core/array_constraints.cpp
+++ b/core/array_constraints.cpp
@@ -84,6 +84,7 @@ Ns_ConstrXeqMax::Ns_ConstrXeqMax(NsIntVar* X, NsIntVarArray* VarArr_init)
 
 void Ns_ConstrXeqMin::ArcCons(void)
 {
+        throw NsException("Ns_ConstrXeqMin: Unimplemented consistency level");
         NsInt min, minmax;
         array_min_minmax(VarArr, min, minmax);
         VarX->removeRange(minmax + 1, NsPLUS_INF, this);
@@ -103,6 +104,7 @@ void Ns_ConstrXeqMin::ArcCons(void)
 
 void Ns_ConstrXeqMax::ArcCons(void)
 {
+        throw NsException("Ns_ConstrXeqMax: Unimplemented consistency level");
         NsInt maxmin, max;
         array_maxmin_max(VarArr, maxmin, max);
         VarX->removeRange(NsMINUS_INF, maxmin - 1, this);
@@ -166,6 +168,7 @@ Ns_ConstrXeqSum::Ns_ConstrXeqSum(NsIntVar* X, NsIntVarArray* VarArr_init,
 // bounds-consistency only
 void Ns_ConstrXeqSum::ArcCons(void)
 {
+        throw NsException("Ns_ConstrXeqSum: Unimplemented consistency level");
         NsInt sumMin, sumMax;
         array_sum_min_max(VarArr, start, length, sumMin, sumMax);
         NsIndex i;
@@ -613,6 +616,7 @@ void allDiffBoundsConsistency(
 // bounds-consistency only
 void Ns_ConstrAllDiffStrong::ArcCons(void)
 {
+        throw NsException("Ns_ConstrAllDiffStrong: Unimplemented consistency level");
         allDiffBoundsConsistency(VarArr, Capacity, groupedNsIntVar::FIRST_GROUP,
                                  this);
 }
@@ -728,6 +732,7 @@ void Ns_ConstrTable::LocalArcCons(Ns_QueueItem& /*Qitem*/)
 
 void Ns_ConstrElement::ArcCons(void)
 {
+        throw NsException("Ns_ConstrElement: Unimplemented consistency level");
         if (!VarIndex->removeRange(NsMINUS_INF, -1, this) ||
             !VarIndex->removeRange(intArray.size(), NsPLUS_INF, this)) {
                 return;
@@ -847,6 +852,7 @@ void VarArrElements_prune(NsIntVarArray& VarArr, const NsIntVar& VarIndex,
 
 void Ns_ConstrVarArrElement::ArcCons(void)
 {
+        throw NsException("Ns_ConstrVarArrElement: Unimplemented consistency level");
         NsInt min, max;
         bool modification;
         do {
diff --git a/core/non_mini_solver_constraints.cpp b/core/non_mini_solver_constraints.cpp
index adcd3a3..40ca1fb 100644
--- a/core/non_mini_solver_constraints.cpp
+++ b/core/non_mini_solver_constraints.cpp
@@ -10,6 +10,7 @@ using namespace std;
 
 void Ns_ConstrXeqYplusCZspecial::ArcCons(void)
 {
+        throw NsException("Ns_ConstrXeqYplusCZspecial: Unimplemented consistency level");
         NsIntVar::const_iterator v, vz;
         for (v = VarX->begin(); v != VarX->end(); ++v) {
                 if (!VarY->contains(*v % C) ||
@@ -122,6 +123,7 @@ Ns_ConstrXinDomain::Ns_ConstrXinDomain(NsIntVar* X,
 
 void Ns_ConstrXinDomain::ArcCons(void)
 {
+        throw NsException("Ns_ConstrXinDomain: Unimplemented consistency level");
         VarX->removeRange(NsMINUS_INF, (*domainNext)[VarX->min() - min] - 1,
                           this);
         VarX->removeRange((*domainPrevious)[VarX->max() - min] + 1, NsPLUS_INF,
@@ -283,6 +285,7 @@ void countArcCons(NsIntVarArray& VarArr, const NsIndex i,
 
 void Ns_ConstrCount::ArcCons(void)
 {
+        throw NsException("Ns_ConstrCount: Unimplemented consistency level");
         for (NsIndex i = 0; i < VarArr->size(); ++i) {
                 countArcCons(*VarArr, i, ValueIndex, ValuesOccurrences, Dwin,
                              this);
@@ -342,6 +345,7 @@ Ns_ConstrInverse::Ns_ConstrInverse(NsIntVarArray* VarArrInv_init,
 
 void Ns_ConstrInverse::ArcCons(void)
 {
+        throw NsException("Ns_ConstrInverse: Unimplemented consistency level");
         NsIndex i;
         NsIntVar::const_iterator val;
         for (i = 0; i < VArrInv.size(); ++i) {
diff --git a/core/var_constraints.cpp b/core/var_constraints.cpp
index 15570ce..c7abf4c 100644
--- a/core/var_constraints.cpp
+++ b/core/var_constraints.cpp
@@ -59,6 +59,7 @@ inline void makeBoolean(NsIntVar* VarX, const Ns_Constraint* constraint)
 
 void Ns_ConstrMetaXeqYlessthanC::ArcCons(void)
 {
+        throw NsException("Ns_ConstrMetaXeqYlessthanC: Unimplemented consistency level");
         makeBoolean(VarX, this);
         if (VarY->max() < C)
                 VarX->removeSingle(0, this);
@@ -103,6 +104,7 @@ void Ns_ConstrMetaXeqYlessthanC::LocalArcCons(Ns_QueueItem& Qitem)
 
 void Ns_ConstrMetaXeqYlessthanZ::ArcCons(void)
 {
+        throw NsException("Ns_ConstrMetaXeqYlessthanZ: Unimplemented consistency level");
         makeBoolean(VarX, this);
         if (VarY->max() < VarZ->min())
                 VarX->removeSingle(0, this);
@@ -181,6 +183,7 @@ void Ns_ConstrMetaXeqYlessthanZ::LocalArcCons(Ns_QueueItem& Qitem)
 
 void Ns_ConstrMetaXeqYlesseqthanC::ArcCons(void)
 {
+        throw NsException("Ns_ConstrMetaXeqYlesseqthanC: Unimplemented consistency level");
         makeBoolean(VarX, this);
         if (VarY->max() <= C)
                 VarX->removeSingle(0, this);
@@ -225,6 +228,7 @@ void Ns_ConstrMetaXeqYlesseqthanC::LocalArcCons(Ns_QueueItem& Qitem)
 
 void Ns_ConstrMetaXeqYlesseqthanZ::ArcCons(void)
 {
+        throw NsException("Ns_ConstrMetaXeqYlesseqthanZ: Unimplemented consistency level");
         makeBoolean(VarX, this);
         if (VarY->max() <= VarZ->min())
                 VarX->removeSingle(0, this);
@@ -308,6 +312,7 @@ void Ns_ConstrMetaXeqYlesseqthanZ::LocalArcCons(Ns_QueueItem& Qitem)
 
 void Ns_ConstrMetaXeqYgreaterthanC::ArcCons(void)
 {
+        throw NsException("Ns_ConstrMetaXeqYgreaterthanC: Unimplemented consistency level");
         makeBoolean(VarX, this);
         if (VarY->min() > C)
                 VarX->removeSingle(0, this);
@@ -352,6 +357,7 @@ void Ns_ConstrMetaXeqYgreaterthanC::LocalArcCons(Ns_QueueItem& Qitem)
 
 void Ns_ConstrMetaXeqYgreatereqthanC::ArcCons(void)
 {
+        throw NsException("Ns_ConstrMetaXeqYgreatereqthanC: Unimplemented consistency level");
         makeBoolean(VarX, this);
         if (VarY->min() >= C)
                 VarX->removeSingle(0, this);
@@ -396,6 +402,7 @@ void Ns_ConstrMetaXeqYgreatereqthanC::LocalArcCons(Ns_QueueItem& Qitem)
 
 void Ns_ConstrMetaXeqYeqC::ArcCons(void)
 {
+        throw NsException("Ns_ConstrMetaXeqYeqC: Unimplemented consistency level");
         makeBoolean(VarX, this);
         if (VarY->min() == C && VarY->max() == C)
                 VarX->removeSingle(0, this);
@@ -441,6 +448,7 @@ void Ns_ConstrMetaXeqYeqC::LocalArcCons(Ns_QueueItem& Qitem)
 
 void Ns_ConstrMetaXeqYneqC::ArcCons(void)
 {
+        throw NsException("Ns_ConstrMetaXeqYneqC: Unimplemented consistency level");
         makeBoolean(VarX, this);
         if (!VarY->contains(C))
                 VarX->removeSingle(0, this);
@@ -516,6 +524,7 @@ void Ns_ConstrXeqYplusC::LocalArcCons(Ns_QueueItem& Qitem)
 
 void Ns_ConstrXeqCminusY::ArcCons(void)
 {
+        throw NsException("Ns_ConstrXeqCminusY: Unimplemented consistency level");
         bool modification;
         do {
                 modification = false;
@@ -593,6 +602,7 @@ void Ns_ConstrXeqY::LocalArcCons(Ns_QueueItem& Qitem)
 
 void Ns_ConstrXeqYdivC::ArcCons(void)
 {
+        throw NsException("Ns_ConstrXeqYdivC: Unimplemented consistency level");
         bool modification;
         do {
                 modification = false;
@@ -625,6 +635,7 @@ void Ns_ConstrXeqYdivC::LocalArcCons(Ns_QueueItem& /*Qitem*/)
 
 void Ns_ConstrXeqCdivY::ArcCons(void)
 {
+        throw NsException("Ns_ConstrXeqCdivY: Unimplemented consistency level");
         bool modification;
         do {
                 modification = false;
@@ -717,6 +728,7 @@ void YmodC_min_max(const NsIntVar* VarY, const NsInt C, NsInt& min, NsInt& max)
 
 void Ns_ConstrXeqYmodC::ArcCons(void)
 {
+        throw NsException("Ns_ConstrXeqYmodC: Unimplemented consistency level");
         NsInt min, max;
         bool modification;
         do {
@@ -771,6 +783,7 @@ void CmodY_min_max(const NsInt C, NsIntVar* VarY, NsInt& min, NsInt& max)
 
 void Ns_ConstrXeqCmodY::ArcCons(void)
 {
+        throw NsException("Ns_ConstrXeqCmodY: Unimplemented consistency level");
         NsInt min, max;
         bool modification;
         do {
@@ -865,6 +878,7 @@ bool intersectionEmpty(const NsIntVar* VarY, const NsIntVar* VarZ)
 
 void Ns_ConstrMetaXeqYeqZ::ArcCons(void)
 {
+        throw NsException("Ns_ConstrMetaXeqYeqZ: Unimplemented consistency level");
         makeBoolean(VarX, this);
         if (VarY->max() == VarZ->min() && VarY->min() == VarZ->max())
                 VarX->removeSingle(neg, this);
@@ -967,6 +981,7 @@ void Ns_ConstrMetaXeqYeqZ::LocalArcCons(Ns_QueueItem& Qitem)
 
 void Ns_ConstrXeqYandZ::ArcCons(void)
 {
+        throw NsException("Ns_ConstrXeqYandZ: Unimplemented consistency level");
         makeBoolean(VarX, this);
         if ((VarY->min() && VarZ->min()))
                 VarX->removeSingle(neg, this);
@@ -1009,6 +1024,7 @@ void Ns_ConstrXeqYandZ::LocalArcCons(Ns_QueueItem& Qitem)
 
 void Ns_ConstrXeqYorZ::ArcCons(void)
 {
+        throw NsException("Ns_ConstrXeqYorZ: Unimplemented consistency level");
         makeBoolean(VarX, this);
         if (VarY->min() + VarZ->min() != 0)
                 VarX->removeSingle(neg, this);
@@ -1051,6 +1067,7 @@ void Ns_ConstrXeqYorZ::LocalArcCons(Ns_QueueItem& Qitem)
 
 void Ns_ConstrXorY::ArcCons(void)
 {
+        throw NsException("Ns_ConstrXorY: Unimplemented consistency level");
         if (VarY->isBound() && VarY->value() == neg)
                 VarX->removeSingle(neg, this);
         if (VarX->isBound() && VarX->value() == neg)
@@ -1311,6 +1328,7 @@ void divisor_prune_bounds(NsIntVar* VarX, NsIntVar* VarY, NsIntVar* VarZ,
 
 void Ns_ConstrXeqYdivZ::ArcCons(void)
 {
+        throw NsException("Ns_ConstrXeqYdivZ: Unimplemented consistency level");
         NsInt min, max;
         bool modification;
         do {
@@ -1419,6 +1437,7 @@ void divisor_for_mod_prune_bounds(NsIntVar* VarX, NsIntVar* VarY,
 
 void Ns_ConstrXeqYmodZ::ArcCons(void)
 {
+        throw NsException("Ns_ConstrXeqYmodZ: Unimplemented consistency level");
         NsInt min, max;
         bool modification;
         do {
